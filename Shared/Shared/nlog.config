<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="C:\Users\PC\Desktop\.Net-Projects\InternProjectAlphaPhase2\OrderManagementMicroservice\log\internal-nlog-AspNetCore.txt">

	<!--asp.net core düzen oluşturucularını etkinleştir-->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<variable name="logFilePath" value="C:\Users\PC\Desktop\.Net-Projects\InternProjectAlphaPhase2\OrderManagementMicroservice\log\"/>
	<variable name="logFileName" value="nlog-${shortdate}"/>
	<variable name="logFileExtension" value="json"/>

	<!--yazılacak hedefler-->
	<targets>
		<!--Temel ayrıntılara sahip tüm günlük mesajları için Dosya Hedefi-->
		<target xsi:type="File" name="allfile" fileName="${var:logFilePath}allFile-${var:logFileName}.log"
				layout="
				${longdate}|
				${event-properties:item=EventId:whenEmpty=0}|
				${level:uppercase=true}|
				${logger}|
				${message} ${exception:format=tostring}" />

		<!--Bazı ASP.NET çekirdek işleyicilerini kullanarak ekstra web ayrıntılarıyla kendi günlük mesajlarınız için Dosya Hedefi-->
		<target xsi:type="File" name="ownFile-web" fileName="${var:logFilePath}${var:logFileName}.${var:logFileExtension}">
			<layout type="JsonLayout" indentJson="True" suppressSpaces="True" >
				<attribute name="time" layout="${longdate}"/>
				<attribute name="level" layout="${level:upperCase=true}"/>
				<attribute name="callsite" encode="false">
					<layout xsi:type="JsonLayout" indentJson="True" suppressSpaces="True" >
						<attribute name="classname" layout="${callsite:className=True:methodName=False:includeNamespace=False}"/>
						<attribute name="methodname" layout="${callsite:className=False:methodName=True}"/>
					</layout>
				</attribute>
				<attribute name="properties" encode="false" >
					<layout xsi:type="JsonLayout" includeEventProperties="true" maxRecursionLimit="2" />
				</attribute>
				<attribute name="exception" encode="false">
					<layout xsi:type="JsonLayout" indentJson="True" suppressSpaces="True" >
						<attribute name="type" layout="${exception:format=type}" />
						<attribute name="message" layout="${exception:format=message}" />
						<attribute name="stacktrace" layout="${exception:format=tostring}" />
					</layout>
				</attribute>
				<attribute name="message" layout="${message}" />
			</layout>
		</target>

		<!--Docker / Visual Studio başlangıç ​​algılamasını iyileştirmek için ömür boyu mesajları barındırmak için Konsol Hedefi-->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>

	<!--kaydedici adından hedefe eşleme kuralları-->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection-->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole)-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />
	</rules>
</nlog>